services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DJANGO_DB_NAME:-jozen}
      POSTGRES_USER: ${DJANGO_DB_USER:-jozen}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD:-jozen}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  web:
    build: .
    restart: unless-stopped
    command: gunicorn jozen.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - production.env
    environment:
      - DEBUG=${DEBUG:-False}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DB_HOST=db
      - DJANGO_DB_NAME=${DJANGO_DB_NAME:-jozen}
      - DJANGO_DB_USER=${DJANGO_DB_USER:-jozen}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD:-jozen}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost,http://127.0.0.1}

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
